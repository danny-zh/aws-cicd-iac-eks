version: 0.2

phases:

  pre_build:
    commands:
      - echo "Logging into Amazon ECR..." 
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      - echo "Logging succeded" 
      - echo "Pulling image from ECR..."
      - docker pull ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_NAME}:${TAG}
      - echo "Tagging image locally..."
      - docker tag ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${IMAGE_NAME}:${TAG} ${IMAGE_NAME}:${TAG}
      - echo "Now in dir $(pwd), contents $(ls)"
      - cd app/backend 
      - echo "Now in dir $(pwd), contents $(ls)"
      - echo "Installing uv"
      - curl -LsSf https://astral.sh/uv/install.sh | sh
      - source $HOME/.local/bin/env
      - echo "Installing project dependencies"
      - uv sync
      - echo "Activating virtualenv"
      - source .venv/bin/activate
  build:
    commands:
      - cd ..
      - echo "Now in dir $(pwd), contents $(ls)"
      - echo "Starting services with docker compose"
      - docker compose up -d || docker logs app-prestart-1 
      - echo "Checking service availability"
      - until [[ $(netstat -tlpn | grep 5432) ]]; do echo "waiting service"; sleep 2; done 
      - until [[ $(netstat -tlpn | grep 8000) ]]; do echo "waiting service"; sleep 2; done 
      - netstat -tlpn
      - echo "Running tests"
      - docker compose exec backend bash scripts/tests-start.sh
  
artifacts:
  files:
    - app/backend/htmlcov/**/*
  discard-paths: yes



