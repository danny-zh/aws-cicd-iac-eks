# Headless service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db_service.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.db_service.label }}
spec:
  ports:
  - port: {{ .Values.sts.container.port }}
    name: {{ .Values.sts.container.name }}
  clusterIP: None
  selector:
    app: db
---
# Statefulset definition
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.sts.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.sts.label }}
spec:
  selector:
    matchLabels:
      app: db # has to match .spec.template.metadata.labels
  serviceName: {{ .Values.db_service.name }}
  replicas: {{ .Values.sts.replicas }} # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: db # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ .Values.sts.container.name }}
        image: postgres:17
        ports:
        - containerPort: {{ .Values.sts.container.port }}
        resources:
          limits:
            memory: {{ .Values.sts.container.limits.memory }}
          requests:
            cpu: {{ .Values.sts.container.limits.cpu }}
            memory: {{ .Values.sts.container.limits.memory }}
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata 
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: backend-configmap          
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: backend-configmap          
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: backend-configmap          
                key: POSTGRES_DB
 
      
